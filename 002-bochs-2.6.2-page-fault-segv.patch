diff --git a/bochs.h b/bochs.h
index 1deddeb..a52437e 100644
--- a/bochs.h
+++ b/bochs.h
@@ -392,6 +392,7 @@ BOCHSAPI extern logfunc_t *genlog;
 void bx_gdbstub_init(void);
 void bx_gdbstub_break(void);
 int bx_gdbstub_check(unsigned int eip);
+void bx_gdbstub_exception(unsigned int nr);
 #define GDBSTUB_STOP_NO_REASON   (0xac0)
 
 #if BX_SUPPORT_SMP
diff --git a/cpu/exception.cc b/cpu/exception.cc
index db38d1b..b2c5f29 100644
--- a/cpu/exception.cc
+++ b/cpu/exception.cc
@@ -914,6 +914,10 @@ void BX_CPU_C::exception(unsigned vector, Bit16u error_code)
 
   BX_CPU_THIS_PTR last_exception_type = exception_type;
 
+#if BX_GDBSTUB
+  bx_gdbstub_exception(vector);
+#endif
+
   if (real_mode()) {
     push_error = 0; // not INT, no error code pushed
     error_code = 0;
diff --git a/gdbstub.cc b/gdbstub.cc
index da600b4..4dab988 100644
--- a/gdbstub.cc
+++ b/gdbstub.cc
@@ -49,6 +49,7 @@ static int last_stop_reason = GDBSTUB_STOP_NO_REASON;
 #define GDBSTUB_EXECUTION_BREAKPOINT    (0xac1)
 #define GDBSTUB_TRACE                   (0xac2)
 #define GDBSTUB_USER_BREAK              (0xac3)
+#define GDBSTUB_EXCEPTION_0E            (0xac4)
 
 static bx_list_c *gdbstub_list;
 static int listen_socket_fd;
@@ -317,6 +318,12 @@ int bx_gdbstub_check(unsigned int eip)
   return GDBSTUB_STOP_NO_REASON;
 }
 
+void bx_gdbstub_exception(unsigned int nr)
+{
+  if (nr == 0x0e)
+    last_stop_reason = GDBSTUB_EXCEPTION_0E;
+}
+
 static int remove_breakpoint(unsigned addr, int len)
 {
   if (len != 1)
@@ -487,6 +494,14 @@ static void debug_loop(void)
         {
           write_signal(&buf[1], SIGTRAP);
         }
+        else if (last_stop_reason == GDBSTUB_EXCEPTION_0E)
+        {
+          write_signal(&buf[1], SIGSEGV);
+        }
+        else if (last_stop_reason == GDBSTUB_EXCEPTION_0E)
+        {
+          write_signal(&buf[1], 0);
+        }
         else
         {
           write_signal(&buf[1], 0);
